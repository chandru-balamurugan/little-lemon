@file:OptIn(ExperimentalMaterial3Api::class)package com.philomath.littlelemonimport android.content.Contextimport android.widget.Toastimport androidx.compose.foundation.BorderStrokeimport androidx.compose.foundation.Imageimport androidx.compose.foundation.layout.Arrangementimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.shape.RoundedCornerShapeimport androidx.compose.material3.Buttonimport androidx.compose.material3.ButtonDefaultsimport androidx.compose.material3.ExperimentalMaterial3Apiimport androidx.compose.material3.OutlinedTextFieldimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.runtime.mutableStateOfimport androidx.compose.runtime.rememberimport androidx.compose.runtime.setValueimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.platform.LocalContextimport androidx.compose.ui.res.painterResourceimport androidx.compose.ui.text.input.TextFieldValueimport androidx.compose.ui.unit.dpimport androidx.navigation.NavHostController//@Preview(showBackground = true)@Composablefun OnboardingScreen(navController: NavHostController) {      val context = LocalContext.current      var firstName by remember { mutableStateOf(TextFieldValue("")) }      var secondName by remember { mutableStateOf(TextFieldValue("")) }      var email by remember { mutableStateOf(TextFieldValue("")) }      Column(            verticalArrangement = Arrangement.Center,            horizontalAlignment = Alignment.CenterHorizontally,            modifier = Modifier.padding(24.dp)      ) {            Image(                  painter = painterResource(R.drawable.logo),                  contentDescription = "Little Lemon",                  modifier = Modifier.align(alignment = Alignment.CenterHorizontally)            )            Text(                  text = "Let's get to know you",                  modifier = Modifier                        .align(alignment = Alignment.CenterHorizontally)                        .padding(12.dp)            )            OutlinedTextField(                  value = firstName,                  onValueChange = { firstName = it },                  label = { Text(text = "First Name") },                  placeholder = { Text(text = "Enter First Name") },                  modifier = Modifier                        .padding(12.dp)                        .fillMaxWidth()            )            OutlinedTextField(                  value = secondName,                  onValueChange = { secondName = it },                  label = { Text(text = "Second Name") },                  placeholder = { Text(text = "Enter Second name") },                  modifier = Modifier                        .padding(horizontal = 12.dp)                        .fillMaxWidth()            )            OutlinedTextField(                  value = email,                  onValueChange = { email = it },                  placeholder = { Text(text = "Enter email") },                  label = { Text(text = "Email") },                  modifier = Modifier                        .padding(12.dp)                        .fillMaxWidth()            )            Button(                  onClick = {                        if (firstName.text.isBlank() || secondName.text.isBlank() || email.text.isBlank()) {                              Toast.makeText(                                    context,                                    "Registration unsuccessful, Please enter all data.",                                    Toast.LENGTH_SHORT                              ).show()                        } else {                              val prefs = context.getSharedPreferences(                                    context.packageName,                                    Context.MODE_PRIVATE                              )                              prefs.edit()                                    .putString("firstName", firstName.text)                                    .putString("secondName", secondName.text)                                    .putString("email", email.text)                                    .commit()                              Toast.makeText(context, "Registration successful", Toast.LENGTH_SHORT)                                    .show()                              navController.navigate(Home.route)                        }                  },                  colors = ButtonDefaults.buttonColors(                        containerColor = Color.Yellow,                        contentColor = Color.Black                  ),                  shape = RoundedCornerShape(15.dp),                  border = BorderStroke(1.dp, Color.Black),                  elevation = ButtonDefaults.elevatedButtonElevation(                        defaultElevation = 10.dp,                        pressedElevation = 15.dp,                        disabledElevation = 0.dp                  ),                  modifier = Modifier                        .align(alignment = Alignment.CenterHorizontally)                        .fillMaxWidth()                        .padding(12.dp)            ) {                  Text(text = "Register")            }      }}